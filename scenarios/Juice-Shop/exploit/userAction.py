import os
import time

from selenium import webdriver
from selenium.common.exceptions import NoSuchElementException

MAX_LOGOUT_FAILS = 1
MAX_PRODUCTS = 1


class User:

    def __init__(self,
                 url,
                 email,
                 password,
                 user_number,
                 chrome_options):
        self.base_url = url
        self.chrome_options = chrome_options
        self.driver = webdriver.Chrome(options=self.chrome_options)
        self.driver.delete_all_cookies()
        self.email = email
        self.password = password
        self.user_number = user_number
        self.logout_count = 0
        # to stop thread
        self.is_running = True
        # to see if thread has stopped
        self.is_finished = False
        # relative directory path
        self.dirname = os.path.abspath(os.curdir)
        # feedback xpath changing when next item clicked starts with 3
        self.feedback_path_count = 3

    def login(self):
        print(f"User {str(self.user_number)}: Try logging in")
        # Open the website
        self.driver.get(f'{self.base_url}/#/login')
        try:
            # get rid of pop up window by clicking in top right corner
            self.driver.find_element_by_xpath(
                '//div[contains(@class,"cdk-overlay-pane")]'
                '//button[@aria-label="Close Welcome Banner"]').click()
        except Exception:
            pass
        # Login with given credentials
        try:
            # find email box
            email_box = self.driver.find_element_by_name('email')
            # enter email address
            email_box.send_keys(self.email)
            # find password box
            pass_box = self.driver.find_element_by_name('password')
            # enter password
            pass_box.send_keys(self.password)
            # find login button
            login_button = self.driver.find_element_by_xpath(
                '//div[contains(@id, "login-form")]//button[@id="loginButton"]')
            # click button
            try:
                login_button.click()
            except NoSuchElementException:
                return False
            time.sleep(1)
            # logout count for too many failed logouts
            self.logout_count = 0
        except NoSuchElementException:
            return False
        # remove cookie overlay window
        try:
            self.driver.find_element_by_xpath(
                '//div[contains(@aria-describedby, "cookieconsent:desc")]'
                '//a[@aria-label="dismiss cookie message"]').click()
        except Exception:
            pass
        return True
